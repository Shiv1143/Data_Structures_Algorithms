
Question 5:
-----------

** Move Zeros **
----------------
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
-------------------------------------------------------------------------------- 
Solution:

Brute Force Approach:
---------------------
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """

        arr = []
        for i in range(len(nums)):
            if nums[i] != 0:
                arr.append(nums[i])

        for i in range(len(arr)):
            nums[i] = arr[i]

        for i  in range(len(arr), len(nums)):
            nums[i] = 0

        return nums

Optimal Solution:
-----------------
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """

        j = -1
        for i in range(len(nums)):
            if nums[i] == 0:
                j = i
                break

        if j == -1:
            return nums

        for i in range(j+1, len(nums)):
            if nums[i] != 0:
                nums[j], nums[i] = nums[i], nums[j]
                j += 1

        return nums
-------------------------------------------------------------------
