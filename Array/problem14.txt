
Question 14:
-------------

Maximum Subarray

Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.
 

Constraints:

1 <= nums.length <= 105
-104 <= nums[i] <= 104

--------------------------------------------------------------

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        s = 0
        start = 0
        ans = float('-inf')
        neg_ans = float('-inf')
        if len(nums) == 1:
            return nums[0]
        for i in range(len(nums)):
            if nums[i] < 0:
                start += 1
            s += nums[i]
            if s < 0:
                s = 0
            if ans < s:
                ans = s
        if start == len(nums):
            for j in range(start):
                neg_ans = max(neg_ans, nums[j])
            return neg_ans
        return ans

--------------------------------------------------------------------------------

